// Generated by view binder compiler. Do not edit!
package uz.gita.puzzle15MBF.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import uz.gita.puzzle15MBF.R;

public final class FragmentMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatTextView appCompatTextView;

  @NonNull
  public final MaterialButton buttonAbout;

  @NonNull
  public final MaterialButton buttonExit;

  @NonNull
  public final MaterialButton buttonRecords;

  @NonNull
  public final MaterialButton buttonSettings;

  @NonNull
  public final MaterialButton buttonStart;

  private FragmentMainBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatTextView appCompatTextView, @NonNull MaterialButton buttonAbout,
      @NonNull MaterialButton buttonExit, @NonNull MaterialButton buttonRecords,
      @NonNull MaterialButton buttonSettings, @NonNull MaterialButton buttonStart) {
    this.rootView = rootView;
    this.appCompatTextView = appCompatTextView;
    this.buttonAbout = buttonAbout;
    this.buttonExit = buttonExit;
    this.buttonRecords = buttonRecords;
    this.buttonSettings = buttonSettings;
    this.buttonStart = buttonStart;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appCompatTextView;
      AppCompatTextView appCompatTextView = ViewBindings.findChildViewById(rootView, id);
      if (appCompatTextView == null) {
        break missingId;
      }

      id = R.id.button_about;
      MaterialButton buttonAbout = ViewBindings.findChildViewById(rootView, id);
      if (buttonAbout == null) {
        break missingId;
      }

      id = R.id.button_exit;
      MaterialButton buttonExit = ViewBindings.findChildViewById(rootView, id);
      if (buttonExit == null) {
        break missingId;
      }

      id = R.id.button_records;
      MaterialButton buttonRecords = ViewBindings.findChildViewById(rootView, id);
      if (buttonRecords == null) {
        break missingId;
      }

      id = R.id.button_settings;
      MaterialButton buttonSettings = ViewBindings.findChildViewById(rootView, id);
      if (buttonSettings == null) {
        break missingId;
      }

      id = R.id.button_start;
      MaterialButton buttonStart = ViewBindings.findChildViewById(rootView, id);
      if (buttonStart == null) {
        break missingId;
      }

      return new FragmentMainBinding((ConstraintLayout) rootView, appCompatTextView, buttonAbout,
          buttonExit, buttonRecords, buttonSettings, buttonStart);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
